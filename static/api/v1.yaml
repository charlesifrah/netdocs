openapi: 3.0.0
info:
  version: 0.1.0
  title: Hubble BLE Network API
  description: |-
    The Hubble BLE Network API provides functions to initialize and manage the Hubble BLE network.
    
    **Initialization**
    
    Before utilizing the Hubble BLE API, you must initialize the network with the current UTC time. The `hubble_ble_init` function sets up the necessary configurations and prepares the network for operation.
    
    **Time Management**
    
    The `hubble_ble_utc_set` function allows you to set or update the current UTC time (in milliseconds since the Unix epoch) within the Hubble BLE Network.
    
    **Encryption Key Management**
    
    For secure communication, Hubble BLE requires a 256-bit encryption key. Use the `hubble_ble_key_set` function to set the encryption key.
    
    **Advertisement Retrieval**
    
    The `hubble_ble_advertise_get` function processes input data to generate a Bluetooth advertisement packet. The advertisement packet includes:
      - A 16-bit service UUID.
      - A service data field containing the encrypted payload.
      
    Additional fields may be added as long as the total advertisement size does not exceed 31 bytes. **Note:** This API uses the legacy packet type (Extended Advertisements are not supported).
  contact:
    name: Hubble Developer Support
    url: 'https://hubble.network'
    email: support@hubble.network
servers:
  - url: 'https://api.hubble.network/v1'
    description: Production server
paths:
  /ble/init:
    post:
      summary: Initialize BLE Network
      description: |
        Initializes the Hubble BLE network with the current UTC time.  
        **This function must be called before calling `hubble_ble_advertise_get`.**
      operationId: hubble_ble_init
      requestBody:
        description: JSON payload containing the current UTC time.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                utc_time:
                  type: integer
                  description: Current UTC time in milliseconds since Unix epoch.
                  example: 1633072800000
      responses:
        '200':
          description: Initialization successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 0 indicates success; non-zero indicates failure.
                    example: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid UTC time provided."
      security:
        - APIKEY: []
  /ble/utc-set:
    post:
      summary: Set BLE Network UTC Time
      description: |
        Sets the current UTC time in the Hubble BLE network.
      operationId: hubble_ble_utc_set
      requestBody:
        description: JSON payload containing the UTC time.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                utc_time:
                  type: integer
                  description: UTC time in milliseconds since Unix epoch.
                  example: 1633072800000
      responses:
        '200':
          description: UTC time set successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 0 indicates success; non-zero indicates failure.
                    example: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid UTC time provided."
      security:
        - APIKEY: []
  /ble/key-set:
    post:
      summary: Set BLE Network Encryption Key
      description: |
        Sets the encryption key for the Hubble BLE network.  
        The key must be a 256-bit value represented as a hexadecimal string.
      operationId: hubble_ble_key_set
      requestBody:
        description: JSON payload containing the encryption key.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: A 256-bit encryption key (hexadecimal string).
                  example: "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
      responses:
        '200':
          description: Encryption key set successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 0 indicates success; non-zero indicates failure.
                    example: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid key format."
      security:
        - APIKEY: []
  /ble/advertise:
    post:
      summary: Retrieve BLE Advertisement
      description: |
        Processes input data to generate a Bluetooth advertisement packet.
        
        **Note:** The advertisement packet includes:
          - Hubble BLE 16-bit service UUID
          - Hubble BLE Service Data field containing the encrypted payload
        
        Additional fields may be advertised as long as the total packet size does not exceed 31 bytes.
      operationId: hubble_ble_advertise_get
      requestBody:
        description: JSON payload containing the input data.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: Base64 encoded input data.
                  example: "SGVsbG8sIFdvcmxkIQ=="
                len:
                  type: integer
                  description: Length of the input data.
                  example: 16
      responses:
        '200':
          description: Advertisement generated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  advertisement:
                    type: string
                    description: Platform-specific advertisement data or pointer.
                    example: "0x7fabc123"
                  out_len:
                    type: integer
                    description: Length of the advertisement packet.
                    example: 31
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input data."
      security:
        - APIKEY: []
components:
  responses:
    GenericFailure:
      description: Failure response
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Request failed due to invalid parameters."
security:
  - APIKEY: []
